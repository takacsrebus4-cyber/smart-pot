-- SQLINES DEMO *** rated by MySQL Workbench
-- SQLINES DEMO *** 01 2025
-- SQLINES DEMO ***    Version: 1.0
-- SQLINES DEMO *** orward Engineering

/* SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0; */
/* SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0; */
/* SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'; */

-- SQLINES DEMO *** ------------------------------------
-- Sc... SQLINES DEMO ***
-- SQLINES DEMO *** ------------------------------------

-- SQLINES DEMO *** ------------------------------------
-- Sc... SQLINES DEMO ***
-- SQLINES DEMO *** ------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** r_Plant`
-- SQLINES DEMO *** ------------------------------------
-- SQLINES FOR EVALUATION USE ONLY (14 DAYS)
CREATE TABLE IF NOT EXISTS mydb.`User_Plant` (
  `name` VARCHAR(100) NOT NULL,
  `ID` INT NOT NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** nts_Data`
-- SQLINES DEMO *** ------------------------------------
CREATE TABLE IF NOT EXISTS mydb.`Plants_Data` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(100) NOT NULL,
  `Scientific_Name` VARCHAR(150) NOT NULL,
  `Min_Light` INT NOT NULL,
  `Max_Light` INT NOT NULL,
  `Min_Moisture` INT NOT NULL,
  `Max_Moisture` INT NOT NULL,
  `Min_Temperature` INT NOT NULL,
  `Max_Temperature` INT NOT NULL,
  `Min_Humidity` INT NOT NULL,
  `Max_Humidity` INT NOT NULL,
  `User_Plant_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_Plants_Data_User_Plant`
    FOREIGN KEY (`User_Plant_name`)
    REFERENCES mydb.`User_Plant` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** rent_Data`
-- SQLINES DEMO *** ------------------------------------
CREATE TABLE IF NOT EXISTS mydb.`Current_Data` (
  `Light` INT NOT NULL,
  `Moisture` INT NOT NULL,
  `Temperature` INT NOT NULL,
  `Humidity` INT NULL,
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Timestamp` DATETIME NOT NULL,
  `User_Plant_ID` VARCHAR(100) /* SQLines: Changed to match the PK data type */ NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_Current_Data_User_Plant1`
    FOREIGN KEY (`User_Plant_ID`)
    REFERENCES mydb.`User_Plant` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** kly_Data`
-- SQLINES DEMO *** ------------------------------------
CREATE TABLE IF NOT EXISTS mydb.`Weekly_Data` (
  `Light` INT NOT NULL,
  `Moisture` INT NOT NULL,
  `Temperature` INT NOT NULL,
  `Humidity` INT NULL,
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Timestamp` DATETIME NOT NULL,
  `User_Plant_ID` VARCHAR(100) /* SQLines: Changed to match the PK data type */ NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_Weekly_Data_User_Plant1`
    FOREIGN KEY (`User_Plant_ID`)
    REFERENCES mydb.`User_Plant` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


/* SET SQL_MODE=@OLD_SQL_MODE; */
/* SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS; */
/* SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS; */
